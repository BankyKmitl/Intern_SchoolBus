# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-19 11:28
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=10)),
                ('license_province', models.CharField(max_length=20)),
                ('number', models.CharField(max_length=3)),
                ('color', models.CharField(max_length=10)),
                ('brand', models.CharField(max_length=20)),
                ('route', models.CharField(max_length=50)),
                ('rpi_mac', models.CharField(max_length=20)),
                ('imei_tracking', models.CharField(max_length=20)),
                ('img', models.ImageField(upload_to='images/bus/')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('gender', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')])),
                ('tel', models.CharField(max_length=10)),
                ('img', models.ImageField(upload_to='images/driver/')),
                ('Bus_license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_bus_license', to='school_bus.Bus')),
            ],
        ),
        migrations.CreateModel(
            name='Scan_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('rssi', models.IntegerField()),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('tel', models.CharField(max_length=15)),
                ('website', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentID', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('gender', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')])),
                ('age', models.IntegerField()),
                ('img', models.ImageField(blank=True, default='/images/human.png', null=True, upload_to='images/student/')),
                ('grade', models.CharField(max_length=100)),
                ('take_address', models.CharField(max_length=100)),
                ('drop_address', models.CharField(max_length=100)),
                ('itag_mac', models.CharField(max_length=20)),
                ('Bus_license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_bus_license', to='school_bus.Bus')),
            ],
        ),
        migrations.AddField(
            model_name='scan_data',
            name='itag_mac',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_bus.Student'),
        ),
        migrations.AddField(
            model_name='scan_data',
            name='rpi_mac',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_bus.Bus'),
        ),
        migrations.AddField(
            model_name='bus',
            name='School_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_bus.School'),
        ),
        migrations.AddField(
            model_name='user',
            name='Bus_license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_bus_license', to='school_bus.Bus'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='studentID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school_bus.Student'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='bus',
            unique_together=set([('license_number', 'license_province')]),
        ),
    ]
